// ----------------------
// –Ω–∞–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö
// ----------------------

// –ú–∞—Å—Å–∏–≤ –∫–æ–º–∞–Ω–¥
const commands = [
  {
    command: "!cam1 üé•",
    description: "–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –Ω–∞ –æ—Å–Ω–æ–≤–Ω—É—é –∫–∞–º–µ—Ä—É",
  },
  {
    command: "!cam2 üéπ",
    description: "–í–∏–¥ —Å –∫–ª–∞–≤–∏—à ‚Äî –∏–¥–µ–∞–ª—å–Ω–æ –¥–ª—è –º—É–∑—ã–∫–∞–ª—å–Ω—ã—Ö –º–æ–º–µ–Ω—Ç–æ–≤",
  },
  {
    command: "!glitch üëæ",
    description: "–î–æ–±–∞–≤–ª—è–µ—Ç –≥–ª–∏—Ç—á-—ç—Ñ—Ñ–µ–∫—Ç –Ω–∞ –≤–∏–¥–µ–æ",
  },
  {
    command: "!party",
  },
  {
    command: "!vhs üìº",
    description: "–°—Ç–∞—Ä—ã–π VHS-—Ñ–∏–ª—å—Ç—Ä ‚Äî –Ω–æ—Å—Ç–∞–ª—å–≥–∏—è",
  },
  {
    command: "!cat üò∫",
    description: "–ü–æ—è–≤–ª—è–µ—Ç—Å—è —Ä–∞–Ω–¥–æ–º–Ω—ã–π –∫–æ—Ç–∏–∫ –Ω–∞ —ç–∫—Ä–∞–Ω–µ",
  },
  {
    command: "!rip üíÄ",
  },

    {
    command: "!cam1 üé•",
    description: "–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –Ω–∞ –æ—Å–Ω–æ–≤–Ω—É—é –∫–∞–º–µ—Ä—É",
  },
  {
    command: "!cam2 üéπ",
    description: "–í–∏–¥ —Å –∫–ª–∞–≤–∏—à ‚Äî –∏–¥–µ–∞–ª—å–Ω–æ –¥–ª—è –º—É–∑—ã–∫–∞–ª—å–Ω—ã—Ö –º–æ–º–µ–Ω—Ç–æ–≤",
  },
  {
    command: "!glitch üëæ",
    description: "–î–æ–±–∞–≤–ª—è–µ—Ç –≥–ª–∏—Ç—á-—ç—Ñ—Ñ–µ–∫—Ç –Ω–∞ –≤–∏–¥–µ–æ",
  },
  {
    command: "!party",
  },
  {
    command: "!vhs üìº",
    description: "–°—Ç–∞—Ä—ã–π VHS-—Ñ–∏–ª—å—Ç—Ä ‚Äî –Ω–æ—Å—Ç–∞–ª—å–≥–∏—è",
  },
  {
    command: "!cat üò∫",
    description: "–ü–æ—è–≤–ª—è–µ—Ç—Å—è —Ä–∞–Ω–¥–æ–º–Ω—ã–π –∫–æ—Ç–∏–∫ –Ω–∞ —ç–∫—Ä–∞–Ω–µ",
  },
  {
    command: "!rip üíÄ",
  },

    {
    command: "!cam1 üé•",
    description: "–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –Ω–∞ –æ—Å–Ω–æ–≤–Ω—É—é –∫–∞–º–µ—Ä—É",
  },
  {
    command: "!cam2 üéπ",
    description: "–í–∏–¥ —Å –∫–ª–∞–≤–∏—à ‚Äî –∏–¥–µ–∞–ª—å–Ω–æ –¥–ª—è –º—É–∑—ã–∫–∞–ª—å–Ω—ã—Ö –º–æ–º–µ–Ω—Ç–æ–≤",
  },
  {
    command: "!glitch üëæ",
    description: "–î–æ–±–∞–≤–ª—è–µ—Ç –≥–ª–∏—Ç—á-—ç—Ñ—Ñ–µ–∫—Ç –Ω–∞ –≤–∏–¥–µ–æ",
  },
  {
    command: "!party",
  },
  {
    command: "!vhs üìº",
    description: "–°—Ç–∞—Ä—ã–π VHS-—Ñ–∏–ª—å—Ç—Ä ‚Äî –Ω–æ—Å—Ç–∞–ª—å–≥–∏—è",
  },
  {
    command: "!cat üò∫",
    description: "–ü–æ—è–≤–ª—è–µ—Ç—Å—è —Ä–∞–Ω–¥–æ–º–Ω—ã–π –∫–æ—Ç–∏–∫ –Ω–∞ —ç–∫—Ä–∞–Ω–µ",
  },
  {
    command: "!rip üíÄ",
  },
];

// ----------------------
// –Ω–∞–±–æ—Ä —Ñ—É–Ω–∫—Ü–∏–π
// ----------------------

// –≥–µ–Ω–µ—Ä–∞—Ü–∏—è HTML-–±–ª–æ–∫–æ–≤ —Å –∫–æ–º–∞–Ω–¥–∞–º–∏
function generateCommandBlocks(commands) {
  const commandList = document.querySelector(".command-list");
  commandList.innerHTML = "";

  commands.forEach((cmd) => {
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ–±–∞ –≤–∞—Ä–∏–∞–Ω—Ç–∞: —Å—Ç—Ä–æ–∫—É –∏ –æ–±—ä–µ–∫—Ç
    const commandText = typeof cmd === 'string' ? cmd : cmd.command;
    const description = typeof cmd === 'string' ? '' : cmd.description || '';

    const block = document.createElement("div");
    block.className = "command";
    
    const icon = document.createElement("button");
    icon.className = "copy-icon";
    icon.innerHTML = ""; // –Ω–µ –Ω—Ä–∞–≤—è—Ç—Å—è —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–µ –∏–∫–æ–Ω–∫–∏, —Ä–µ—à–∏–ª –≤–æ–≤—Å–µ —É–¥–∞–ª–∏—Ç—å
    
    block.appendChild(icon);
    block.innerHTML += `
      <h3>${commandText}</h3>
      ${description ? `<p>${description}</p>` : ''}
    `;

    block.addEventListener("click", function() {
      animateIcon(icon);
      animateBackground(this);
      copyToClipboard(commandText.split(" ")[0]);
    });

    commandList.appendChild(block);
  });
}

// –∞–Ω–∏–º–∞—Ü–∏–∏ –∏–∫–æ–Ω–∫–∏ –≤ –±–ª–æ–∫–µ –∫–æ–º–∞–Ω–¥—ã
function animateIcon(iconElement) {
  iconElement.style.transform = "scale(1.3)";
  setTimeout(() => {
    iconElement.style.transform = "";
  }, 300);
}

// –∞–Ω–∏–º–∞—Ü–∏—è —Ñ–æ–Ω–∞ –¥–ª—è –±–ª–æ–∫–∞ –∫–æ–º–∞–Ω–¥—ã
function animateBackground(element) {
  element.style.backgroundColor = "#888888";
  setTimeout(() => {
    element.style.backgroundColor = "";
  }, 300);
}

// –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞
function copyToClipboard(text) {
  navigator.clipboard.writeText(text).then(() => {
    const toast = document.getElementById("toast");
    toast.classList.add("show");
    
    setTimeout(() => {
      toast.style.opacity = "0";
      setTimeout(() => {
        toast.classList.remove("show");
        toast.style.opacity = "1";
      }, 300);
    }, 2000);
  });
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener("DOMContentLoaded", () => {
  generateCommandBlocks(commands);
});